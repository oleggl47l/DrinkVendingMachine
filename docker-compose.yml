version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: drink-vending-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGPORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: redis-vending
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  backend:
    build:
      context: ./DrinkVendingMachine
    container_name: drink-vending-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ConnectionStrings__DrinkVendingMachineDb: ${CONNECTION_STRING}
      ConnectionStrings__Redis: ${REDIS_CONNECTION}
    ports:
      - "5290:8080"

  frontend:
      build:
        context: ./drink-vending-machine-ui
      container_name: drink-vending-frontend
      depends_on:
        - backend
      ports:
        - "3000:3000"
      environment:
        NODE_ENV: production
volumes:
  pgdata:
